if (process.platform == 'linux') {
	var oracle = require('oracle');
}
else if (process.platform == 'darwin') {
	var oracle = require('oracle_mac');
}

var connectData = {
    hostname: "localhost",
    port: 1525,
    database: "crs", // System ID (SID)
    user: "tfung",
    password: "pass2014"
};

var oracleDataTypes = [
	'SYSTIMESTAMP'
]

// unsure of how to return success and failure in javascript
function oracleQuery(statement) {
	oracle.connect(connectData, function(err, connection) {
	if (err) { 
		console.log('Error connecting to db:', err); 
		console.log(statement);

		return 0; 
	}

		connection.execute(statement, [], function(err, results) {
			if (err) { 
				console.log('Error executing query:', err); 
				console.log(statement);
				connection.close();

				return 0; 
			}

			console.log(results);
			connection.close(); // call only when query is finished executing
		});
	});

	return 1;
}

function oracleInsert(table, jsonData) {
	var tableString;
	var valueString;

	for (var key in jsonData) {
		var value = oracleDataTypes.indexOf(jsonData[key]) < 0 ? '\''+jsonData[key]+'\'' : jsonData[key];

		if (tableString != undefined) {
			var temp = oracleDataTypes.indexOf(jsonData[key]) < 0 ? '\''+jsonData[key]+'\'' : jsonData[key];

			tableString = tableString + ',' + key;
			valueString = valueString + ',' + value;
		}
		else {
			tableString = key;
			valueString = value;
		}
	}

	var insertStatement =
		'INSERT INTO '+table+' ('+tableString+') '+
		'VALUES ('+valueString+')';

	return(oracleQuery(insertStatement));
}

exports.oracleQuery = oracleQuery;
exports.oracleInsert = oracleInsert;
